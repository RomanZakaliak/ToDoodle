@model TodoViewModel
@using Humanizer

@{
    ViewData["Title"] = "Manage your todo list!";
}

    <div class="panel panel-default todo-panel">
        <div>
            @Html.ActionLink("Add new item", "_AddEditItem", new { id = Guid.Empty },
                                              new { @class = "btn btn-primary modal-link" })
        </div>
        <div class="panel-heading">@ViewData["Title"]</div>
        <table class="table table-hover">
            <thead>
                <tr>
                    <td>&#x2714</td>
                    <td>Item</td>
                    <td>Due</td>
                </tr>
            </thead>

            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        <form asp-action="MarkDone" method="POST">
                            <input type="checkbox" class="done-checkbox" />
                            <input type="hidden" name="id" value="@item.ID" />
                        </form>
                    </td>

                    <td>@item.Title</td>
                    <td>@item.DueAt.Humanize()</td>
                    <td>
                        @Html.ActionLink("Edit", "_AddEditItem", new { id = item.ID },
                                           new { @class = "btn btn-primary modal-link" })
                    </td>
                </tr>
            }
        </table>
    </div>
@await Html.PartialAsync("_ConfirmModal")

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('body').on('click', 'a.modal-link', function (e) {

                e.preventDefault();

                $("#modal").remove();

                var url = $(this).attr("href");

                $.get(url, function (data) {
                    $("main").append(data);
                    $("#modal").modal();
                });

                var target = $("main")[0];

                var observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (mutation) {
                        var newNodes = mutation.addedNodes;
                        if (newNodes !== null) {
                            var $nodes = $(newNodes); 
                            $nodes.each(function () {
                                $("#DueAt").datetimepicker();
                                $("#DueAt").css("z-index", 9999);
                            });
                        }
                    });
                });

                var config = {
                    attributes: true,
                    childList: true,
                    characterData: true
                };

                observer.observe(target, config);
            });
        });
    </script>
}